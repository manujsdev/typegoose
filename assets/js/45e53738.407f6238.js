"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[9163],{5680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>y});var o=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),u=a,y=d["".concat(l,".").concat(u)]||d[u]||g[u]||n;return r?o.createElement(y,i(i({ref:t},c),{},{components:r})):o.createElement(y,i({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<n;p++)i[p]=r[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6978:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>n,metadata:()=>s,toc:()=>p});var o=r(8168),a=(r(6540),r(5680));const n={id:"all-decorators",title:"All Decorators"},i=void 0,s={unversionedId:"guides/all-decorators",id:"guides/all-decorators",title:"All Decorators",description:"This Page shows all the decorators that can be used for / in a class.",source:"@site/../docs/guides/all-decorators.md",sourceDirName:"guides",slug:"/guides/all-decorators",permalink:"/typegoose/docs/guides/all-decorators",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/all-decorators.md",tags:[],version:"current",frontMatter:{id:"all-decorators",title:"All Decorators"},sidebar:"guides",previous:{title:"Typegoose Logger",permalink:"/typegoose/docs/guides/advanced/logger"},next:{title:'Use Without "emitDecoratorMetadata"',permalink:"/typegoose/docs/guides/use-without-emitDecoratorMetadata"}},l={},p=[],c={toc:p},d="wrapper";function g(e){let{components:t,...r}=e;return(0,a.yg)(d,(0,o.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"This Page shows all the decorators that can be used for / in a class."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"All Property decorators:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/typegoose/docs/api/decorators/prop"},(0,a.yg)("inlineCode",{parentName:"a"},"@prop"))," is the most important decorator, because it defines values(","|","keys) that are then in the model & document."))),(0,a.yg)("li",{parentName:"ul"},"All Class decorators:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/typegoose/docs/api/decorators/model-options"},(0,a.yg)("inlineCode",{parentName:"a"},"@modelOptions")),", used for Schema Options, an existing Mongoose and an existing Connection"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/typegoose/docs/api/decorators/indexes"},(0,a.yg)("inlineCode",{parentName:"a"},"@index"))," is for indexes, that are ",(0,a.yg)("strong",{parentName:"li"},"NOT")," defined in the prop (mainly for compound indexes)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/typegoose/docs/api/decorators/searchIndexes"},(0,a.yg)("inlineCode",{parentName:"a"},"@searchIndex"))," is for defining a search index."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/typegoose/docs/api/decorators/plugin"},(0,a.yg)("inlineCode",{parentName:"a"},"@plugin"))," is for adding plugins. Please note that plugins cannot modify the types of prop."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/typegoose/docs/api/decorators/query-method"},(0,a.yg)("inlineCode",{parentName:"a"},"@queryMethod"))," is for adding custom query Methods."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/typegoose/docs/api/decorators/hooks"},"Hooks"),":",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/typegoose/docs/api/decorators/hooks#pre"},(0,a.yg)("inlineCode",{parentName:"a"},"@pre"))," is for Pre-Hooks."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/typegoose/docs/api/decorators/hooks#post"},(0,a.yg)("inlineCode",{parentName:"a"},"@post"))," is for Post-Hooks.")))))))}g.isMDXComponent=!0}}]);