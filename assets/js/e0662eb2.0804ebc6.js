"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[215],{5680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>g});var n=a(6540);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(a),u=o,g=m["".concat(c,".").concat(u)]||m[u]||p[u]||i;return a?n.createElement(g,r(r({ref:t},d),{},{components:a})):n.createElement(g,r({ref:t},d))}));function g(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:o,r[1]=s;for(var l=2;l<i;l++)r[l]=a[l];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2082:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=a(8168),o=(a(6540),a(5680));const i={id:"manual-schema-modification",title:"Manual Schema Modification"},r=void 0,s={unversionedId:"guides/advanced/manual-schema-modification",id:"guides/advanced/manual-schema-modification",title:"Manual Schema Modification",description:"Sometimes manual schema modification is needed, this Guide will describe on how to do it.",source:"@site/../docs/guides/advanced/manual-schema-modification.md",sourceDirName:"guides/advanced",slug:"/guides/advanced/manual-schema-modification",permalink:"/typegoose/docs/guides/advanced/manual-schema-modification",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/advanced/manual-schema-modification.md",tags:[],version:"current",frontMatter:{id:"manual-schema-modification",title:"Manual Schema Modification"},sidebar:"guides",previous:{title:"Typegoose's Name Generation",permalink:"/typegoose/docs/guides/advanced/name-generation"},next:{title:'Why overwrite "this"',permalink:"/typegoose/docs/guides/advanced/overwrite-this"}},c={},l=[],d={toc:l},m="wrapper";function p(e){let{components:t,...a}=e;return(0,o.yg)(m,(0,n.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Sometimes manual schema modification is needed, this Guide will describe on how to do it."),(0,o.yg)("p",null,"When wanting to get the schema of a class, but not the model yet, then ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/functions/build-schema"},(0,o.yg)("inlineCode",{parentName:"a"},"buildSchema"))," should be used and ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/functions/add-model-to-typegoose"},(0,o.yg)("inlineCode",{parentName:"a"},"addModelToTypegoose"))," to add it to the typegoose cache and get the correct types."),(0,o.yg)("p",null,"Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},'// Normal Typegoose Class definition\nclass Cat {\n  @prop()\n  public name?: string;\n}\n\n// "buildSchema" is called like "getModelForClass"\n// "buildSchema" also supports overwriting options like "getModelForClass" (essentially "getModelForClass" passes the options to "buildSchema")\nconst CatSchema = buildSchema(Cat);\n\n// example modifying the schema before adding\n// in this case adding a virtual "getName"\nCatSchema.virtual("getName").get(function() { return this.name });\n\n// The Schema will have to be manually made into a model\nconst CatModelRaw = mongoose.model(getName(Cat), CatSchema);\n\n// And finally the model will get added to the typegoose cache with the class and also have proper types\n// essentially "addModelToTypegoose" re-exports the input model, but cast as the correct typegoose type\nexport const CatModel = addModelToTypegoose(CatModelRaw, Cat);\n')),(0,o.yg)("p",null,"Note: the example above uses ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/functions/get-name"},(0,o.yg)("inlineCode",{parentName:"a"},"getName"))," to generate the name like typegoose does normally."))}p.isMDXComponent=!0}}]);