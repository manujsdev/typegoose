"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[4427],{5680:(e,t,o)=>{o.d(t,{xA:()=>p,yg:()=>y});var r=o(6540);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function l(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?l(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function g(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)o=l[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)o=l[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var i=r.createContext({}),s=function(e){var t=r.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,p=g(e,["components","mdxType","originalType","parentName"]),c=s(o),d=n,y=c["".concat(i,".").concat(d)]||c[d]||u[d]||l;return o?r.createElement(y,a(a({ref:t},p),{},{components:o})):r.createElement(y,a({ref:t},p))}));function y(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=o.length,a=new Array(l);a[0]=d;var g={};for(var i in t)hasOwnProperty.call(t,i)&&(g[i]=t[i]);g.originalType=e,g[c]="string"==typeof e?e:n,a[1]=g;for(var s=2;s<l;s++)a[s]=o[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},6095:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>g,toc:()=>s});var r=o(8168),n=(o(6540),o(5680));const l={id:"logger",title:"Typegoose Logger"},a=void 0,g={unversionedId:"guides/advanced/logger",id:"guides/advanced/logger",title:"Typegoose Logger",description:"Typegoose uses loglevel to make some soft-errors and for debugging.",source:"@site/../docs/guides/advanced/logger.md",sourceDirName:"guides/advanced",slug:"/guides/advanced/logger",permalink:"/typegoose/docs/guides/advanced/logger",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/advanced/logger.md",tags:[],version:"current",frontMatter:{id:"logger",title:"Typegoose Logger"},sidebar:"guides",previous:{title:"Common Plugins",permalink:"/typegoose/docs/guides/integration-examples/common-plugins"},next:{title:"All Decorators",permalink:"/typegoose/docs/guides/all-decorators"}},i={},s=[{value:"Set the LogLevel",id:"set-the-loglevel",level:2},{value:"Enable Debug Logger",id:"enable-debug-logger",level:2}],p={toc:s},c="wrapper";function u(e){let{components:t,...o}=e;return(0,n.yg)(c,(0,r.A)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Typegoose uses ",(0,n.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/loglevel"},(0,n.yg)("inlineCode",{parentName:"a"},"loglevel"))," to make some soft-errors and for debugging."),(0,n.yg)("h2",{id:"set-the-loglevel"},"Set the LogLevel"),(0,n.yg)("p",null,"Currently available loglevels:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"SILENT")," (logs nothing | turns the logger off ","[not recommended]",")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"ERROR")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"WARN")," (default), used for soft errors / soft mistakes (everything below is mostly for debugging)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"INFO")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"DEBUG")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"TRACE")," (shows everything)")),(0,n.yg)("p",null,"To set the loglevel of Typegoose:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-ts"},"import { setLogLevel, LogLevels } from '@typegoose/typegoose';\n\nsetLogLevel(LogLevels.SILENT);\n// or\nsetLogLevel(\"SILENT\");\n")),(0,n.yg)("h2",{id:"enable-debug-logger"},"Enable Debug Logger"),(0,n.yg)("p",null,"The import and call of ",(0,n.yg)("inlineCode",{parentName:"p"},"setLogLevel")," needs to be placed before any other imports of the project entries file, because all decorators on a Class are executed on the context level they are on (commonly the module root)."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-ts"},'// Project Entry file\nimport { setLogLevel } from "@typegoose/typegoose";\nsetLogLevel("DEBUG");\n\nimport { anythingElse } from "someModule";\nimport { SomeModel } from "./someModel";\n\n// the rest of the main entry file\n')))}u.isMDXComponent=!0}}]);