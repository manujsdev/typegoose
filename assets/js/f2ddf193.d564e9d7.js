"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[572],{5680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>m});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var y=r.createContext({}),l=function(e){var t=r.useContext(y),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(y.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,y=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=l(n),c=a,m=d["".concat(y,".").concat(c)]||d[c]||u[c]||o;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var p={};for(var y in t)hasOwnProperty.call(t,y)&&(p[y]=t[y]);p.originalType=e,p[d]="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2123:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=n(8168),a=(n(6540),n(5680));const o={id:"query-method",title:"@queryMethod"},i=void 0,p={unversionedId:"api/decorators/query-method",id:"api/decorators/query-method",title:"@queryMethod",description:"Typings:",source:"@site/../docs/api/decorators/queryMethod.md",sourceDirName:"api/decorators",slug:"/api/decorators/query-method",permalink:"/typegoose/docs/api/decorators/query-method",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/api/decorators/queryMethod.md",tags:[],version:"current",frontMatter:{id:"query-method",title:"@queryMethod"},sidebar:"docs",previous:{title:"@plugin",permalink:"/typegoose/docs/api/decorators/plugin"},next:{title:"getModelForClass",permalink:"/typegoose/docs/api/functions/get-model-for-class"}},y={},l=[{value:"Example",id:"example",level:2}],s={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Typings:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},"function queryMethod<QueryHelpers, U extends AnyParamConstructor<any>>(\n  func: (this: QueryHelperThis<U, QueryHelpers>, ...params: any[]) => Query<any, any>\n): ClassDecorator\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Parameters:")),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,a.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"func")," ",(0,a.yg)("span",{class:"badge badge--secondary"},"Required")),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("inlineCode",{parentName:"td"},"(this: QueryHelperThis<U, QueryHelpers>, ...params: any[]) => Query<any, any>")),(0,a.yg)("td",{parentName:"tr",align:"left"},"The Function to add as a Query Method")))),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"@queryMethod")," is used to add ",(0,a.yg)("a",{parentName:"p",href:"https://thecodebarbarian.com/mongoose-custom-query-methods"},"Custom Query Methods"),"."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"func")," Parameters:")),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,a.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"this")),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("inlineCode",{parentName:"td"},"QueryHelperThis<U, QueryHelpers>")),(0,a.yg)("td",{parentName:"tr",align:"left"},"The Current Query, with Query Helpers available")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"...params")),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("inlineCode",{parentName:"td"},"any[]")),(0,a.yg)("td",{parentName:"tr",align:"left"},"Extra Parameters defined by the Query Helper to be added")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"=>")," (Return Type)"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("inlineCode",{parentName:"td"},"mongoose.Query")),(0,a.yg)("td",{parentName:"tr",align:"left"},"A Mongoose Query has to be returned from the Query Helper")))),(0,a.yg)("admonition",{type:"warning"},(0,a.yg)("p",{parentName:"admonition"},"A Named function has do be used, it also cannot be a Arrow-Function (",(0,a.yg)("inlineCode",{parentName:"p"},"() => any"),"), because the Query can only be accessed with ",(0,a.yg)("inlineCode",{parentName:"p"},"this")," and a name has to be supplied to be callable later on. (see Example below)")),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},'import { types } from "@typegoose/typegoose";\n\n// an interface is needed to add query-function types to the class\ninterface QueryHelpers {\n  // use the actual function types dynamically\n  findByName: types.AsQueryMethod<typeof findByName>;\n  // the same can be done with other functions (not listed in this example)\n  findByLastname: types.AsQueryMethod<typeof findByLastname>;\n}\n\nfunction findByName(this: types.QueryHelperThis<typeof Person, QueryHelpers>, name: string) {\n  return this.find({ name }); // it is important to not do a "await" and ".exec"\n}\n@queryMethod(findByName)\nclass Person {\n  @prop({ required: true })\n  public name: string;\n}\nconst PersonModel = getModelForClass<typeof Person, QueryHelpers>(Person);\n\n// thanks to "QueryHelpers" the function "findByName" should exist here and return the correct type\nconst docs: types.DocumentType<Person>[] = await PersonModel.find()\n  .findByName(\'hello\')\n  .orFail()\n  .exec();\n')))}u.isMDXComponent=!0}}]);