"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[7202],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>g});var a=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,g=m["".concat(i,".").concat(d)]||m[d]||p[d]||l;return n?a.createElement(g,s(s({ref:t},u),{},{components:n})):a.createElement(g,s({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,s=new Array(l);s[0]=d;var r={};for(var i in t)hasOwnProperty.call(t,i)&&(r[i]=t[i]);r.originalType=e,r[m]="string"==typeof e?e:o,s[1]=r;for(var c=2;c<l;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9365:(e,t,n)=>{n.d(t,{A:()=>s});var a=n(6540),o=n(53);const l={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.A)(l.tabItem,s),hidden:n},t)}},1470:(e,t,n)=>{n.d(t,{A:()=>C});var a=n(8168),o=n(6540),l=n(53),s=n(3104),r=n(6347),i=n(7485),c=n(1682),u=n(9466);function m(e){return function(e){var t,n;return null!=(t=null==(n=o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=null!=t?t:m(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,r.W6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,i.aZ)(l),(0,o.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=p(e),[s,r]=(0,o.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const o=null!=(t=a.find((e=>e.default)))?t:a[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:l}))),[i,c]=g({queryString:n,groupId:a}),[m,y]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,l]=(0,u.Dv)(n);return[a,(0,o.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),h=(()=>{const e=null!=i?i:m;return d({value:e,tabValues:l})?e:null})();(0,o.useLayoutEffect)((()=>{h&&r(h)}),[h]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error("Can't select invalid tab value="+e);r(e),c(e),y(e)}),[c,y,l]),tabValues:l}}var h=n(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:n,selectedValue:r,selectValue:i,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:m}=(0,s.a_)(),p=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==r&&(m(t),i(a))},d=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{var a;const t=u.indexOf(e.currentTarget)+1;n=null!=(a=u[t])?a:u[0];break}case"ArrowLeft":{var o;const t=u.indexOf(e.currentTarget)-1;n=null!=(o=u[t])?o:u[u.length-1];break}}null==(t=n)||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:s}=e;return o.createElement("li",(0,a.A)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:p},s,{className:(0,l.A)("tabs__item",b.tabItem,null==s?void 0:s.className,{"tabs__item--active":r===t})}),null!=n?n:t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=y(e);return o.createElement("div",{className:(0,l.A)("tabs-container",b.tabList)},o.createElement(f,(0,a.A)({},e,t)),o.createElement(v,(0,a.A)({},e,t)))}function C(e){const t=(0,h.A)();return o.createElement(N,(0,a.A)({key:String(t)},e))}},7495:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>c,toc:()=>m});var a=n(8168),o=(n(6540),n(5680)),l=n(1470),s=n(9365);const r={id:"models-with-same-name",title:"Models with same name"},i=void 0,c={unversionedId:"guides/advanced/models-with-same-name",id:"guides/advanced/models-with-same-name",title:"Models with same name",description:"This Guide shows all the possibilities for a model to use different names.",source:"@site/../docs/guides/advanced/models-with-same-name.mdx",sourceDirName:"guides/advanced",slug:"/guides/advanced/models-with-same-name",permalink:"/typegoose/docs/guides/advanced/models-with-same-name",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/advanced/models-with-same-name.mdx",tags:[],version:"current",frontMatter:{id:"models-with-same-name",title:"Models with same name"},sidebar:"guides",previous:{title:"Array Types & Fields",permalink:"/typegoose/docs/guides/advanced/array-types"},next:{title:"Reference other Classes",permalink:"/typegoose/docs/guides/advanced/reference-other-classes"}},u={},m=[{value:"SchemaOptions collection",id:"schemaoptions-collection",level:2},{value:"Typegoose Custom Options &quot;customName&quot;",id:"typegoose-custom-options-customname",level:2},{value:"Disable Caching",id:"disable-caching",level:2},{value:"Notes",id:"notes",level:2}],p={toc:m},d="wrapper";function g(e){let{components:t,...n}=e;return(0,o.yg)(d,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"This Guide shows all the possibilities for a model to use different names."),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"If Classes with the same name are wanted, these methods need to be used so that Typegoose can differentiate between them")),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"Since ",(0,o.yg)("inlineCode",{parentName:"p"},"7.6.0")," the name can also be changed in ",(0,o.yg)("inlineCode",{parentName:"p"},"getModelForClass")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"buildSchema")," calls.")),(0,o.yg)("h2",{id:"schemaoptions-collection"},"SchemaOptions collection"),(0,o.yg)("p",null,"For this to work, ",(0,o.yg)("inlineCode",{parentName:"p"},"{ options: { automaticName } }")," must be true."),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"{ schemaOptions: { collection } }")," can be used to set a custom collection a model should use.\nUsing ",(0,o.yg)("inlineCode",{parentName:"p"},"{ schemaOptions: { collection } }")," with ",(0,o.yg)("inlineCode",{parentName:"p"},"automaticName")," automatically adds a suffix of the collection to the model's name."),(0,o.yg)("p",null,"Example without ",(0,o.yg)("inlineCode",{parentName:"p"},"automaticName"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"@modelOptions({ schemaOptions: { collection: 'Something' } })\nclass MultiModel {}\n\nconst model = getModelForClass(MultiModel);\nexpect(model.modelName).to.be.equal('MultiModel');\n")),(0,o.yg)("p",null,"Example with ",(0,o.yg)("inlineCode",{parentName:"p"},"automaticName"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"@modelOptions({ schemaOptions: { collection: 'Something' }, options: { automaticName: true } })\nclass MultiModel {}\n\nconst model = getModelForClass(MultiModel);\nexpect(model.modelName).to.be.equal('MultiModel_Something');\n")),(0,o.yg)("h2",{id:"typegoose-custom-options-customname"},'Typegoose Custom Options "customName"'),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"{ options: { customName } }")," can be used to set a custom model name."),(0,o.yg)("p",null,"Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"@modelOptions({ options: { customName: 'CustomName' } })\nclass CustomNameOption {}\n\nconst model = getModelForClass(CustomNameOption);\nexpect(model.modelName).to.be.equal('CustomName');\n")),(0,o.yg)("p",null,"If ",(0,o.yg)("inlineCode",{parentName:"p"},"{ options: { customName } }")," is used with ",(0,o.yg)("inlineCode",{parentName:"p"},"{ options: { automaticName: true } }"),", then it will be used as a ",(0,o.yg)("em",{parentName:"p"},"suffix")," of the normal name."),(0,o.yg)("p",null,"Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"@modelOptions({ options: { customName: 'CustomName', automaticName: true } })\nclass CustomNameOption {}\n\nconst model = getModelForClass(CustomNameOption);\nexpect(model.modelName).to.be.equal('CustomNameOption_CustomName');\n")),(0,o.yg)("h2",{id:"disable-caching"},"Disable Caching"),(0,o.yg)("p",null,"Since Typegoose ",(0,o.yg)("inlineCode",{parentName:"p"},"10.2.0")," there is also the option of disabling the cache globally with ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/functions/set-global-options"},(0,o.yg)("inlineCode",{parentName:"a"},"setGlobalOptions")),"'s ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/functions/set-global-options#disableglobalcaching"},(0,o.yg)("inlineCode",{parentName:"a"},"disableGlobalCaching"))," or locally via ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#disablecaching"},(0,o.yg)("inlineCode",{parentName:"a"},"@modelOptions")),"."),(0,o.yg)(l.A,{groupId:"caching-global-local",mdxType:"Tabs"},(0,o.yg)(s.A,{value:"global",label:"Disable Cache globally",mdxType:"TabItem"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"import { setGlobalOptions, getModelForClass, prop } from \"@typegoose/typegoose\";\n\nsetGlobalOptions({ globalOptions: { disableGlobalCaching: true } });\n\nclass Kitten {\n  @prop()\n  public name: string;\n}\n\nconst KittenModelDefault = getModelForClass(Kitten);\nconst KittenModelCon1 = getModelForClass(Kitten, { existingConnection: mongoose.createConnection() });\n\n// OR\n{\n  class Kitten {\n    @prop()\n    public name: string;\n  }\n\n  const KittenModel = getModelForClass(Kitten);\n  assert.ok(!!KittenModel.schema.path('name'));\n}\n{\n  class Kitten {\n    @prop()\n    public nameTag: string;\n  }\n\n  const KittenModel = getModelForClass(Kitten, { existingConnection: mongoose.createConnection() }); // still requires being defined on a different connection / mongoose instance\n  assert.ok(!!KittenModel.schema.path('nameTag'));\n}\n"))),(0,o.yg)(s.A,{value:"local",label:"Disable Cache locally",default:!0,mdxType:"TabItem"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"import { modelOptions, getModelForClass, prop } from \"@typegoose/typegoose\";\n\n@modelOptions({ options: { disableCache: true } })\nclass Kitten {\n  @prop()\n  public name: string;\n}\n\nconst KittenModelDefault = getModelForClass(Kitten);\nconst KittenModelCon1 = getModelForClass(Kitten, { existingConnection: mongoose.createConnection() });\n\n// OR\n{\n  class Kitten {\n    @prop()\n    public name: string;\n  }\n\n  const KittenModel = getModelForClass(Kitten, { options: { disableCaching: true } });\n  assert.ok(!!KittenModel.schema.path('name'));\n}\n{\n  class Kitten {\n    @prop()\n    public nameTag: string;\n  }\n\n  const KittenModel = getModelForClass(Kitten, { existingConnection: mongoose.createConnection(), options: { disableCaching: true } }); // still requires being defined on a different connection / mongoose instance\n  assert.ok(!!KittenModel.schema.path('nameTag'));\n}\n")))),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"Models still cannot be defined more than once in the same connection / mongoose instance.")),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Setting the Cache to be disabled globally will make some functions that rely on it error, see ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/guides/error-warning-details#cache-disabled-e033"},(0,o.yg)("inlineCode",{parentName:"a"},"E033"))," and ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/functions/set-global-options#disableglobalcaching"},(0,o.yg)("inlineCode",{parentName:"a"},"disableGlobalCaching"))," which effects it will have.")),(0,o.yg)("h2",{id:"notes"},"Notes"),(0,o.yg)("p",null,"For more details on the usage of these naming features, please look into ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/typegoose/typegoose/blob/r6/master/test/tests/customName.test.ts"},"the tests that are written for them.")),(0,o.yg)("p",null,"See also ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/guides/advanced/name-generation"},"Typegoose's Name Generation")," for a complete (and hopefully simple) way to understand name generation."))}g.isMDXComponent=!0}}]);