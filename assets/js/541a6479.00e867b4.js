"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[436],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>d});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,d=c["".concat(i,".").concat(m)]||c[m]||g[m]||o;return t?a.createElement(d,s(s({ref:n},p),{},{components:t})):a.createElement(d,s({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[c]="string"==typeof e?e:r,s[1]=l;for(var u=2;u<o;u++)s[u]=t[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9365:(e,n,t)=>{t.d(n,{A:()=>s});var a=t(6540),r=t(53);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:n,hidden:t,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,s),hidden:t},n)}},1470:(e,n,t)=>{t.d(n,{A:()=>N});var a=t(8168),r=t(6540),o=t(53),s=t(3104),l=t(6347),i=t(7485),u=t(1682),p=t(9466);function c(e){return function(e){var n,t;return null!=(n=null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function g(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=null!=n?n:c(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function d(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,i.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=g(e),[s,l]=(0,r.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const r=null!=(n=a.find((e=>e.default)))?n:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[i,u]=d({queryString:t,groupId:a}),[c,y]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[a,o]=(0,p.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),h=(()=>{const e=null!=i?i:c;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),y(e)}),[u,y,o]),tabValues:o}}var h=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:l,selectValue:i,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),g=e=>{const n=e.currentTarget,t=p.indexOf(n),a=u[t].value;a!==l&&(c(n),i(a))},m=e=>{var n;let t=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{var a;const n=p.indexOf(e.currentTarget)+1;t=null!=(a=p[n])?a:p[0];break}case"ArrowLeft":{var r;const n=p.indexOf(e.currentTarget)-1;t=null!=(r=p[n])?r:p[p.length-1];break}}null==(n=t)||n.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:s}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>p.push(e),onKeyDown:m,onClick:g},s,{className:(0,o.A)("tabs__item",f.tabItem,null==s?void 0:s.className,{"tabs__item--active":l===n})}),null!=t?t:n)})))}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function w(e){const n=y(e);return r.createElement("div",{className:(0,o.A)("tabs-container",f.tabList)},r.createElement(b,(0,a.A)({},e,n)),r.createElement(v,(0,a.A)({},e,n)))}function N(e){const n=(0,h.A)();return r.createElement(w,(0,a.A)({key:String(n)},e))}},9865:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var a=t(8168),r=(t(6540),t(5680)),o=t(1470),s=t(9365);const l={id:"nesting-classes",title:"Nesting Classes"},i=void 0,u={unversionedId:"guides/nesting-classes",id:"guides/nesting-classes",title:"Nesting Classes",description:"Differences from Mongoose",source:"@site/../docs/guides/nesting-classes.mdx",sourceDirName:"guides",slug:"/guides/nesting-classes",permalink:"/typegoose/docs/guides/nesting-classes",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/nesting-classes.mdx",tags:[],version:"current",frontMatter:{id:"nesting-classes",title:"Nesting Classes"},sidebar:"guides",previous:{title:"Default Classes",permalink:"/typegoose/docs/guides/default-classes"},next:{title:"Custom Types",permalink:"/typegoose/docs/guides/advanced/custom-types"}},p={},c=[{value:"Differences from Mongoose",id:"differences-from-mongoose",level:3},{value:"Using the Passthrough Class",id:"using-the-passthrough-class",level:3},{value:"Difference to References",id:"difference-to-references",level:3}],g={toc:c},m="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(m,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h3",{id:"differences-from-mongoose"},"Differences from Mongoose"),(0,r.yg)("p",null,"Typegoose Nesting is slightly different from mongoose, the following will show a basic mongoose schema which has nesting and how it would be translated to typegoose."),(0,r.yg)(o.A,{groupId:"mongoose-typegoose",mdxType:"Tabs"},(0,r.yg)(s.A,{value:"mongoose",label:"Mongoose",default:!0,mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const AnimalSchema = new mongoose.Schema({\n  name: String,\n  properties: {\n    hasEaten: Boolean,\n    nicknames: [String]\n  }\n});\n"))),(0,r.yg)(s.A,{value:"typegoose",label:"Typegoose",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"class Animal {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public properties?: Properties;\n}\n\nclass Properties {\n  @prop()\n  public hasEaten?: boolean;\n\n  @prop({ type: String })\n  public nicknames?: string[];\n}\n")))),(0,r.yg)("p",null,"It is required to put nested properties in their own class because of how typescript reflection works, it currently just translates ",(0,r.yg)("inlineCode",{parentName:"p"},"{ someprop: string }")," to ",(0,r.yg)("inlineCode",{parentName:"p"},"Object")," in reflection."),(0,r.yg)("p",null,"Also, under the hood, typegoose creates the schemas that would be equivalent to writing:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const PropertiesSchema = new mongoose.Schema({\n  hasEaten: {\n    type: Boolean\n  },\n  nicknames: [{\n    type: String\n  }]\n});\n\nconst AnimalSchema = new mongoose.Schema({\n  name: {\n    type: String\n  },\n  properties: {\n    type: PropertiesSchema\n  }\n});\n")),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},'Typegoose does not support native "nested paths" (unless using ',(0,r.yg)("a",{parentName:"p",href:"#using-the-passthrough-class"},(0,r.yg)("inlineCode",{parentName:"a"},"Passthrough")),"), each class in typegoose will be a nested schema (each class is its own ",(0,r.yg)("inlineCode",{parentName:"p"},"Schema")," instance), so it is not a 1:1 translation of the initial mongoose example to typegoose, but similar enough to initially think that way.")),(0,r.yg)("h3",{id:"using-the-passthrough-class"},"Using the Passthrough Class"),(0,r.yg)("admonition",{type:"warning"},(0,r.yg)("p",{parentName:"admonition"},"It is not recommended to use the ",(0,r.yg)("inlineCode",{parentName:"p"},"Passthrough")," Class unless explicitly required to workaround something. In case you have found a problem that could only be solved with the Passthrough class, please open a new issue in the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/typegoose/typegoose/"},"typegoose repository")," so that we can fix having to use the Passthrough Class.")),(0,r.yg)("p",null,"In Typegoose there also exists a special class called ",(0,r.yg)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/prop#passthrough-class"},(0,r.yg)("inlineCode",{parentName:"a"},"Passthrough"))," which can be used to write a mongoose schema-like directly, without typegoose processing it."),(0,r.yg)("p",null,"Here is a Example of how a mongoose schema would look like writing it with ",(0,r.yg)("inlineCode",{parentName:"p"},"Passthrough"),":"),(0,r.yg)(o.A,{groupId:"mongoose-typegoose",mdxType:"Tabs"},(0,r.yg)(s.A,{value:"mongoose",label:"Mongoose",default:!0,mdxType:"TabItem"},(0,r.yg)("p",null,"Mongoose Initial Schema:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"const AnimalSchema = new mongoose.Schema({\n  name: String,\n  properties: {\n    hasEaten: Boolean,\n    nicknames: [String]\n  }\n});\n"))),(0,r.yg)(s.A,{value:"typegoose",label:"Typegoose",mdxType:"TabItem"},(0,r.yg)("p",null,"And the Typegoose Equivalent with ",(0,r.yg)("inlineCode",{parentName:"p"},"Passthrough")," (using the ",(0,r.yg)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/prop#passthrough-direct"},(0,r.yg)("inlineCode",{parentName:"a"},"Direct"))," mode):"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"class Animal {\n  @prop()\n  public name?: string;\n\n  @prop({ type: () => new Passthrough({ hasEaten: Boolean, nicknames: [String] }, true) })\n  public properties?: { hasEaten: boolean, nicknames: string[] };\n}\n")))),(0,r.yg)("p",null,"With ",(0,r.yg)("inlineCode",{parentName:"p"},"Passthrough")," and the ",(0,r.yg)("inlineCode",{parentName:"p"},"Direct")," mode, the typegoose class above is fully equivalent in how it is given to mongoose as the mongoose schema example."),(0,r.yg)("h3",{id:"difference-to-references"},"Difference to References"),(0,r.yg)("p",null,"In Typegoose, references and subdocuments are written similarly:"),(0,r.yg)(o.A,{groupId:"diff-reference",mdxType:"Tabs"},(0,r.yg)(s.A,{value:"ref-subdoc",label:"Subdocument",default:!0,mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"class Animal {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public properties?: Properties;\n}\n\nclass Properties {\n  @prop()\n  public hasEaten?: boolean;\n\n  @prop({ type: String })\n  public nicknames?: string[];\n}\n"))),(0,r.yg)(s.A,{value:"ref-ref",label:"Reference",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts"},"class Animal {\n  @prop()\n  public name?: string;\n\n  @prop({ ref: () => Properties })\n  public properties?: Ref<Properties>;\n}\n\nclass Properties {\n  @prop()\n  public hasEaten?: boolean;\n\n  @prop({ type: String })\n  public nicknames?: string[];\n}\n"))),(0,r.yg)(s.A,{value:"diff",label:"Difference",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},"class Animal {\n  @prop()\n  public name?: string;\n\n-   @prop()\n-   public properties?: Properties;\n+   @prop({ ref: () => Properties })\n+   public properties?: Ref<Properties>;\n}\n\nclass Properties {\n  @prop()\n  public hasEaten?: boolean;\n\n  @prop({ type: String })\n  public nicknames?: string[];\n")))),(0,r.yg)("p",null,"For more on referencing other classes, read ",(0,r.yg)("a",{parentName:"p",href:"/typegoose/docs/guides/advanced/reference-other-classes"},"Reference other Classes"),"."))}d.isMDXComponent=!0}}]);