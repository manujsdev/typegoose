"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[3358],{5680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>c});var a=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=a.createContext({}),s=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=s(e.components);return a.createElement(m.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,m=e.parentName,g=r(e,["components","mdxType","originalType","parentName"]),p=s(n),u=o,c=p["".concat(m,".").concat(u)]||p[u]||d[u]||l;return n?a.createElement(c,i(i({ref:t},g),{},{components:n})):a.createElement(c,i({ref:t},g))}));function c(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=u;var r={};for(var m in t)hasOwnProperty.call(t,m)&&(r[m]=t[m]);r.originalType=e,r[p]="string"==typeof e?e:o,i[1]=r;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1115:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>s});var a=n(8168),o=(n(6540),n(5680));const l={id:"name-generation",title:"Typegoose's Name Generation"},i=void 0,r={unversionedId:"guides/advanced/name-generation",id:"guides/advanced/name-generation",title:"Typegoose's Name Generation",description:"In Typegoose the name generation can vary somewhat, this guide will explain all possible ways a name gets generated.",source:"@site/../docs/guides/advanced/name-generation.md",sourceDirName:"guides/advanced",slug:"/guides/advanced/name-generation",permalink:"/typegoose/docs/guides/advanced/name-generation",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/advanced/name-generation.md",tags:[],version:"current",frontMatter:{id:"name-generation",title:"Typegoose's Name Generation"},sidebar:"guides",previous:{title:"Nested Discriminators",permalink:"/typegoose/docs/guides/advanced/nested-discriminators"},next:{title:"Manual Schema Modification",permalink:"/typegoose/docs/guides/advanced/manual-schema-modification"}},m={},s=[{value:"Default",id:"default",level:2},{value:"Using with <code>automaticName</code>",id:"using-with-automaticname",level:2},{value:"Using with <code>customName</code>",id:"using-with-customname",level:2},{value:"Using with <code>automaticName</code> and <code>customName</code>",id:"using-with-automaticname-and-customname",level:2},{value:"Simple Matrix",id:"simple-matrix",level:2}],g={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.yg)(p,(0,a.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"In Typegoose the name generation can vary somewhat, this guide will explain all possible ways a name gets generated."),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"This Guide will use the ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/functions/assertions"},(0,o.yg)("inlineCode",{parentName:"a"},"assertion"))," function that typegoose provides.",(0,o.yg)("br",{parentName:"p"}),"\n","TL;DR: This function is basically like NodeJS's ",(0,o.yg)("a",{parentName:"p",href:"https://nodejs.org/api/assert.html#assertvalue-message"},(0,o.yg)("inlineCode",{parentName:"a"},"assert")),", just more typescript friendly.")),(0,o.yg)("h2",{id:"default"},"Default"),(0,o.yg)("p",null,"The default, without any options the name that gets generated is the Class Name."),(0,o.yg)("p",null,"Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"class SomeClass {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be the class name\nassertion(getName(SomeClass) === 'SomeClass');\n")),(0,o.yg)("h2",{id:"using-with-automaticname"},"Using with ",(0,o.yg)("inlineCode",{parentName:"h2"},"automaticName")),(0,o.yg)("p",null,"When using the option ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#automaticname"},(0,o.yg)("inlineCode",{parentName:"a"},"automaticName")),", there are multiple cases when having ",(0,o.yg)("inlineCode",{parentName:"p"},"collection")," defined."),(0,o.yg)("p",null,"Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"// Example without having \"collection\" defined\n@modelOptions({ options: { automaticName: true } })\nclass SomeClassWithoutCollection {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be the class name\nassertion(getName(SomeClassWithoutCollection) === 'SomeClassWithoutCollection');\n\n// Example having \"collection\" defined\n@modelOptions({ schemaOptions: { collection: 'someCollection' }, options: { automaticName: true } })\nclass SomeClassWithoutCollection {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be a combination of the class name and the collection\nassertion(getName(SomeClassWithoutCollection) === 'SomeClassWithoutCollection_someCollection');\n")),(0,o.yg)("h2",{id:"using-with-customname"},"Using with ",(0,o.yg)("inlineCode",{parentName:"h2"},"customName")),(0,o.yg)("p",null,"When using the option ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#customname"},(0,o.yg)("inlineCode",{parentName:"a"},"customName")),", it will be the name that gets generated."),(0,o.yg)("p",null,"Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},'// Example having "customName" statically set\n@modelOptions({ options: { customName: "Hello" } })\nclass SomeClassWithCustomName {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be the statically defined "customName"\nassertion(getName(SomeClassWithCustomName) === \'Hello\');\n\n// Example having "customName" be a function\nlet counter = 0;\n@modelOptions({ options: { customName: () => {\n  counter++;\n  return "Hello" + counter;\n} } })\nclass SomeClassWithCustomNameFunction {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be the generated "customName"\nassertion(getName(SomeClassWithCustomNameFunction) === \'Hello0\');\nassertion(getName(SomeClassWithCustomNameFunction) === \'Hello1\');\n')),(0,o.yg)("h2",{id:"using-with-automaticname-and-customname"},"Using with ",(0,o.yg)("inlineCode",{parentName:"h2"},"automaticName")," and ",(0,o.yg)("inlineCode",{parentName:"h2"},"customName")),(0,o.yg)("p",null,"When using option ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#automaticname"},(0,o.yg)("inlineCode",{parentName:"a"},"automaticName"))," and ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#customname"},(0,o.yg)("inlineCode",{parentName:"a"},"customName"))," together, the resulting name will be a combination of the class name and ",(0,o.yg)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#customname"},(0,o.yg)("inlineCode",{parentName:"a"},"customName")),"."),(0,o.yg)("p",null,"Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},'// Example having "customName" statically set and having "automaticName"\n@modelOptions({ options: { customName: "Hello", automaticName: true } })\nclass SomeClassWithCustomNameAndAutomaticName {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be a combination of the class name and "customName"\nassertion(getName(SomeClassWithCustomNameAndAutomaticName) === \'SomeClassWithCustomNameAndAutomaticName_Hello\');\n')),(0,o.yg)("h2",{id:"simple-matrix"},"Simple Matrix"),(0,o.yg)("p",null,"This is a simple matrix to show what interacts with what, or also called a Truth Table."),(0,o.yg)("sub",null,(0,o.yg)("code",null,"x")," means it is unset"),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Class name"),(0,o.yg)("th",{parentName:"tr",align:null},"customName"),(0,o.yg)("th",{parentName:"tr",align:null},"automaticName"),(0,o.yg)("th",{parentName:"tr",align:null},"collection"),(0,o.yg)("th",{parentName:"tr",align:null},"Result"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"')),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"'))),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"')),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"SomeCollection"')),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"'))),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"')),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"AcustomName"')),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"AcustomName"'))),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"')),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"true")),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"'))),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"')),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"true")),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"SomeCollection"')),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello_SomeCollection"'))),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"')),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"AcustomName"')),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"true")),(0,o.yg)("td",{parentName:"tr",align:null},"x"),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello_AcustomName"'))),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello"')),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"AcustomName"')),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"true")),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"SomeCollection"')),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},'"Hello_AcustomName"'))))))}d.isMDXComponent=!0}}]);